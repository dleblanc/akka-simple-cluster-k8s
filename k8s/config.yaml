apiVersion: v1
kind: ConfigMap
metadata:
  name: akka-cluster-configmap
data:
  application.conf: |
    application {
      api {
        host = "localhost"
        port = 8080
        hello-message = "Hello from an Akka Cluster!"
      }
      actorsystem {
        name = akka-cluster
      }
    }
    akka {
      cluster {
        // Prefer to use the discovery 'config' method below, instead of using seed-nodes.
        seed-nodes = []

        shutdown-after-unsuccessful-join-seed-nodes = off // We default to master-mode
      }

      coordinated-shutdown {
        run-by-jvm-shutdown-hook = on //this is the default value
        exit-jvm = on
      }

      // Provide a custom downing implementation
      cluster.downing-provider-class = "tanukki.akka.cluster.autodown.MajorityLeaderAutoDowning"

      custom-downing {
        stable-after = 10s

        majority-leader-auto-downing {
          majority-member-role = ""
          down-if-in-minority = true
          shutdown-actor-system-on-resolution = true
        }
      }

      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
      }

      remote {
        log-remote-lifecycle-events = on
        netty.tcp {
          port = 2551
        }
      }

      discovery {

        method = kubernetes-api

        kubernetes-api {
          pod-label-selector = "app=akka-cluster"
          pod-port-name = "management"
        }
      }

      management {
        http {
          bind-hostname = "0.0.0.0"
          port = 8558
        }
        cluster.bootstrap {
          contact-point-discovery {
            service-name = "akka-cluster" // Does this default to the actor system name?
            required-contact-point-nr = 2
            contact-point-discovery.port-name = management
          }
        }
      }
    }
